function conf = create()

conf = struct();
conf.time_in = struct(...
    'fixation', 5 ...
  , 'mag_cue', 1 ...
  , 'delay_to_decision', 0 ... % set later
  , 'delay_to_reward', 0 ...  % set later
  , 'cued_decision', 2 ...
  , 'true_decision', 2 ...
  , 'train_decision', 2 ...
  , 'reward', 0 ... % set later
  , 'iti', 2.5 ...
);
conf.stimuli = struct(...
    'fix_square', make_default_rect_stimulus_descriptor([255, 255, 255]) ...
  , 'mag_cue', make_default_rect_stimulus_descriptor([255, 0, 0]) ...
  , 'cued_decision', make_default_rect_stimulus_descriptor([0, 0, 255]) ...
  , 'choice_option0', make_default_rect_stimulus_descriptor([0, 255, 255], [1/3, 0.5]) ...
  , 'choice_option1', make_default_rect_stimulus_descriptor([255, 0, 255], [2/3, 0.5]) ...
);
conf.configure_stimulus = @(stimulus, trial_desc, outcome_index) ...
  default_configure_stimulus(stimulus, trial_desc, outcome_index);
conf.targets = struct(...
  'matching_stimuli', {{...
      struct('name', 'fix_square', 'source', 'm1_gaze', 'duration', 0.5, 'window', 'main') ...
    , struct('name', 'cued_decision', 'source', 'm1_gaze', 'duration', 0.5, 'window', 'main') ...
    , struct('name', 'choice_option0', 'source', 'm1_gaze', 'duration', 1, 'window', 'main') ...
    , struct('name', 'choice_option1', 'source', 'm1_gaze', 'duration', 1, 'window', 'main') ...
  }} ...
);
conf.sources = struct(...
  'm1_gaze', struct('type', 'mouse') ... %  digital_eyelink
);
conf.windows = struct(...
  'main', make_window_desc(0, [0, 0, 800, 800]) ...
);
conf.serial = struct(...
  'port', 'COM3' ...
  , 'channels', {{'A', 'B', 'C'}} ...
  , 'disabled', false ...
);
conf.reward = struct(...
  'main', 0.5 ...
, 'channel', 1 ...
);

end

function desc = make_window_desc(index, rect)
desc = struct( 'index', index, 'rect', rect );
end

function stim = make_default_rect_stimulus_descriptor(color, pos)
if ( nargin < 2 )
  pos = [0.5, 0.5];
end
stim = struct( 'type', 'ptb.stimuli.Rect' ...
  , 'position', pos, 'scale', [0.25, 0.25], 'color', color );
end

function default_configure_stimulus(stimulus, trial_desc, outcome_index)

switch ( trial_desc.Outcomes{outcome_index} )
  case 'self'
    stimulus.FaceColor = [255, 0, 0];
  case 'both'
    stimulus.FaceColor = [255, 127, 127];
  case 'other'
    stimulus.FaceColor = [0, 0, 255];
  case 'bottle'
    stimulus.FaceColor = [127, 127, 127];
  otherwise
    error( 'Unrecognized outcome "%s".', trial_desc.Outcomes{outcome_index} );
end

end